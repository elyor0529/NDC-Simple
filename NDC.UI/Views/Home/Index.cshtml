@model SearchModel
@{
    ViewBag.Title = "Search people";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @class = "form-inline", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.DestinationEmail)

    if (ViewBag.Danger != null)
    {
        <div class="text-danger">
            @Html.Raw(ViewBag.Danger)
        </div>
    }

    if (ViewBag.Success != null)
    {
        <div class="text-success">
            @ViewBag.Success
        </div>
    }

    if (ViewBag.Warning != null)
    {
        <div class="text-success">
            @ViewBag.Warning
        </div>
    }

    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Names, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Names, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Names, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />

    <div class="form-group">
        <label class="control-label  col-md-4">Age</label>
        <div class="input-group col-md-8">
            @Html.EditorFor(model => model.MinAge, new { htmlAttributes = new { @class = "form-control" } })
            <div class="input-group-addon"> to </div>
            @Html.EditorFor(model => model.MaxAge, new { htmlAttributes = new { @class = "form-control" } })
            <div class="input-group-addon">year</div>
        </div>
        @Html.ValidationMessageFor(model => model.MinAge, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.MaxAge, "", new { @class = "text-danger" })
    </div>

    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.DropDownList("Sex", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />

    <div class="form-group">
        <label class="control-label  col-md-4">Heigth</label>
        <div class="input-group col-md-8">
            @Html.EditorFor(model => model.MinHeigth, new { htmlAttributes = new { @class = "form-control" } })
            <div class="input-group-addon"> to </div>
            @Html.EditorFor(model => model.MaxHeigth, new { htmlAttributes = new { @class = "form-control" } })
            <div class="input-group-addon">cm</div>
        </div>
        @Html.ValidationMessageFor(model => model.MinHeigth, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.MaxHeigth, "", new { @class = "text-danger" })
    </div>

    <hr />

    <div class="form-group">

        <label class="control-label  col-md-4">Weight</label>
        <div class="input-group col-md-8">
            @Html.EditorFor(model => model.MinWeight, new { htmlAttributes = new { @class = "form-control" } })
            <div class="input-group-addon"> to </div>
            @Html.EditorFor(model => model.MaxWeight, new { htmlAttributes = new { @class = "form-control" } })
            <div class="input-group-addon">kg</div>
        </div>
        @Html.ValidationMessageFor(model => model.MinWeight, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.MaxWeight, "", new { @class = "text-danger" })
    </div>

    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
        </div>
    </div>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <button type="submit" value="Search" class="btn btn-default">
                    <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    Search
                </button>
            </div>
        </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
